{"version":3,"sources":["pages/formManagement/previewWorkFlow/index.module.less","pages/formManagement/previewWorkFlow/flowWrapper.js","pages/formManagement/previewWorkFlow/detailModal.js","pages/formManagement/previewWorkFlow/index.js","pages/formManagement/previewWorkFlowContainer.js","pages/formManagement/util.js"],"names":["module","exports","drawerModal","content","row","label","footer","flowContainer","FlowWrapper","_onAfterChange","e","item","type","action","propsAPI","_this","props","setTimeout","executeCommand","react_default","a","createElement","es","className","styles","data","this","flowData","onClick","_onClick","onAfterChange","graph","edgeDefaultShape","Component","withPropsAPI","DrawerModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","nodeName","userType","selectItems","selectKeys","auditType","nodeDetails","_this2","currentNodeDetail","find","id","currentNode","model","console","log","JSON","stringify","setState","nodeId","selectUsers","Array","isArray","map","participantId","_this3","Fragment","input","placeholder","style","width","value","disabled","es_radio","Group","lineHeight","tag","key","color","participantName","background","height","margin","es_button","onCloseDrawer","PreviewWorkFlow","getFlowDataById","getAction","concat","then","res","success","parse","obj","nodes","nodeList","edges","edgeList","message","error","getModel","indexOf","judgeId","showDrawer","processId","preProps","padding","flowWrapper","drawer","title","placement","closable","onClose","visible","destroyOnClose","detailModal_DrawerModal","previewWorkFlowContainer","parseUrlSearch","react__WEBPACK_IMPORTED_MODULE_5___default","_previewWorkFlow__WEBPACK_IMPORTED_MODULE_6__","__webpack_require__","d","__webpack_exports__","href","window","location","paramsIndex","searchObj","params","substr","split","length","forEach","arr"],"mappings":"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","file":"static/js/49.3d81d07e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawerModal\":\"src-pages-formManagement-previewWorkFlow-index-module__drawerModal--yFT7X\",\"content\":\"src-pages-formManagement-previewWorkFlow-index-module__content--2UPCM\",\"row\":\"src-pages-formManagement-previewWorkFlow-index-module__row--X-Lj3\",\"label\":\"src-pages-formManagement-previewWorkFlow-index-module__label--2bYNd\",\"footer\":\"src-pages-formManagement-previewWorkFlow-index-module__footer--2Pfzs\",\"flowContainer\":\"src-pages-formManagement-previewWorkFlow-index-module__flowContainer--3vOCP\"};","import React, { Component } from 'react';\nimport { Flow, withPropsAPI } from 'gg-editor';\nimport styles from './index.module.less';\n\nclass FlowWrapper extends Component {\n    _onAfterChange = (e) => {\n        if(e.item && e.item.type===\"edge\" && e.action === \"add\"){//新建连线\n            // return false\n            const { propsAPI } = this.props;\n            setTimeout(()=>{\n                propsAPI.executeCommand(\"undo\");\n            })\n        }\n    }\n    render() {\n        return (\n            <Flow \n                className={styles.flowContainer}\n                data={this.props.flowData} \n                // style={{height:584}} \n                onClick={this.props._onClick} \n                onAfterChange={this._onAfterChange}\n                graph={{ edgeDefaultShape: 'flow-polyline'}} \n            />\n        )\n    }\n}\n\n\nexport default withPropsAPI(FlowWrapper)","import React, { Component } from 'react';\nimport { Button, Radio, Input, Tag  } from 'antd';\nimport styles from './index.module.less';\nexport default class DrawerModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            nodeName:\"\",//节点名称\n            userType:\"1\",//审批人类型1：人员，2：角色\n            selectItems:[\n                // {\"participantId\":\"1002010334\",\"participantName\":\"张三\"}\n            ], //选择的人员或者角色列表\n            selectKeys:[], //选择的key\n            auditType:\"1\",//审批类型1：会签，2：或签\n            nodeDetails:[],//所有节点信息集合\n        }\n    }\n    componentDidMount(){\n        // console.log(this.props.currentNode.model);//当前点击的节点信息\n        const currentNodeDetail = this.props.nodeDetails.find(item => item.id===this.props.currentNode.model.id) || {};\n        console.log(currentNodeDetail);\n        if(JSON.stringify(currentNodeDetail)===\"{}\"){\n            this.setState({\n                nodeDetails:this.props.nodeDetails,\n                selectItems: [],\n                selectKeys:[],\n                nodeName:this.props.currentNode.model.label,\n                userType:\"1\",\n                auditType:\"1\",\n                nodeId:this.props.currentNode.model.id\n            })\n        }else{\n            this.setState({\n                nodeDetails:this.props.nodeDetails,\n                selectItems:currentNodeDetail.selectUsers || [],\n                selectKeys:Array.isArray(currentNodeDetail.selectUsers)?currentNodeDetail.selectUsers.map(item => item.participantId):[],\n                nodeName:currentNodeDetail.nodeName,\n                userType:currentNodeDetail.userType,\n                auditType:currentNodeDetail.auditType,\n                nodeId:this.props.currentNode.model.id\n            })\n        }\n    }\n    render() {\n        console.log(this.state.auditType)\n        return (\n            <React.Fragment>\n                <div className={styles.content}>\n                    <div className={styles.row}>\n                        <div className={styles.label}><i>*</i>节点名称：</div>\n                        <Input placeholder=\"请输入节点名称\" style={{width:\"240px\"}} value={this.state.nodeName} disabled/>\n                    </div>\n                    <div className={styles.row}>\n                        <div className={styles.label}>设置审批人：</div>\n                        <Radio.Group value={this.state.userType} style={{lineHeight:\"32px\"}} disabled>\n                            <Radio value={\"1\"}>指定人员</Radio>\n                            <Radio value={\"2\"}>角色</Radio>\n                        </Radio.Group>\n                    </div>\n                    <div className={styles.row}>\n                        {\n                           this.state.selectItems.map(item => (<Tag key={item.participantId} color=\"blue\">{item.participantName}</Tag>))\n                        }\n                    </div>\n                    <div style={{background:\"#E8EBEE\",height:1,margin:\"16px 0\"}}></div>\n                    <div className={styles.row}>\n                        <p>多人审核时采用的审核方式</p>\n                        <Radio.Group value={this.state.auditType} disabled>\n                            <Radio value=\"2\">会签（须所有审核人同意）</Radio>\n                            <br/><br/>\n                            <Radio value=\"1\">或签（一名审核人同意或拒绝即可）</Radio>\n                        </Radio.Group>\n                    </div>\n                </div>\n                <div className={styles.footer}>\n                    <Button onClick={()=>{this.props.onCloseDrawer()}}>关 闭</Button>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport GGEditor from 'gg-editor';\nimport { Drawer,message } from 'antd';\nimport { getAction } from '@/axios';\nimport FlowWrapper from'./flowWrapper';\nimport DetailModal from './detailModal';\nimport styles from './index.module.less';\n\nexport default class PreviewWorkFlow extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showDrawer:false,\n            flowData:{\n                nodes:[],\n                edges:[],\n            },\n            nodeDetails:[],\n            currentNode:{}\n        }\n    }\n    componentDidMount(){\n        if(this.props.processId){\n            this.getFlowDataById(this.props.processId)\n        }\n    }\n    componentDidUpdate(preProps){\n        if(preProps.processId !== this.props.processId){\n            this.getFlowDataById(this.props.processId)\n        }\n    }\n    //通过流程id获取流程数据\n    getFlowDataById = (id) => {\n        if(id){\n            getAction(`/ybt/wf/process/queryProcessById?processId=${id}`).then(res => {\n                if(res.success){\n                    let data = JSON.parse(res.obj)\n                    this.setState({\n                        flowData:{\n                            nodes:data.nodeList,\n                            edges:data.edgeList\n                        },\n                        nodeDetails:data.nodeDetails\n                    })\n                }else{\n                    message.error(\"获取数据出错\")\n                }\n            })\n        }\n    }\n    //点击节点\n    _onClick = (e) => {\n        const judgeIds = [\"n001\",\"n002\",\"n003\",\"n004\",\"e001\",\"e002\"];\n        if(!e.item){\n            return false\n        }\n        const model = e.item.getModel();\n        if(judgeIds.indexOf(model.judgeId)!==-1){\n            console.log(\"内置节点不可操作---点击\");\n        }else{\n            if(e.item.type===\"node\"){//点击了节点 显示抽屉\n                 this.setState({showDrawer:true,currentNode:e.item})\n            }\n        }\n    }\n     //关闭节点属性抽屉\n    onCloseDrawer = () => {\n        this.setState({ showDrawer: false});\n    };\n    render() {\n        return (\n            <GGEditor style={{padding:\"20px\",height:'100%'}} >\n                {/* <Flow \n                    data={this.state.flowData} \n                    style={{height:584}} \n                    onClick={this._onClick} \n                    onAfterChange={this._onAfterChange}\n                    graph={{ edgeDefaultShape: 'flow-polyline'}} \n                /> */}\n                <FlowWrapper flowData={this.state.flowData} _onClick={this._onClick}/>\n                <Drawer\n                    className={styles.drawerModal}\n                    title=\"节点属性\"\n                    width={380}\n                    placement=\"right\"\n                    closable={false}\n                    onClose={this.onCloseDrawer}\n                    visible={this.state.showDrawer}\n                    destroyOnClose={true}\n                    // maskClosable={false}\n                >\n                    <DetailModal nodeDetails={this.state.nodeDetails}  onCloseDrawer={this.onCloseDrawer} currentNode={this.state.currentNode}/>\n                </Drawer>\n            </GGEditor>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport PreviewWorkFlow from './previewWorkFlow';\nimport {parseUrlSearch} from './util'\n\nexport default class previewWorkFlowContainer extends Component {\n    render() {\n        let processId=parseUrlSearch().id;\n        return <PreviewWorkFlow processId={processId}/>\n    }\n}\n","/**\n|--------------------------------------------------\n| 解析url传参的search字符串\n|--------------------------------------------------\n*/\nexport const parseUrlSearch=()=>{\n    let href = window.location.href;\n    let paramsIndex = '';\n    let searchObj = {};\n    if (href.indexOf('?') > -1) {            \n        paramsIndex = href.indexOf(\"?\") + 1;\n        let params = href.substr(paramsIndex).split('&');\n        if (params && params.length > 0) {\n            params.forEach(\n                (item) => {\n                    let arr = item.split('=');\n                    searchObj[arr[0]] = arr[1]\n                }\n            )    \n        }\n    }\n    return searchObj\n}"],"sourceRoot":""}